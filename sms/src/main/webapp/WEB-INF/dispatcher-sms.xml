<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<context:component-scan base-package="com.mycompany.sms.controller" />
	<context:component-scan base-package="com.mycompany.sms.service" />
	<context:component-scan base-package="com.mycompany.sms.dao" />
	<context:component-scan base-package="com.mycompany.sms.api" />

	<!-- Root Context: defines shared resources visible to all other web components -->


	<!-- Google 소셜 로그인 연결 설정 -->
	<bean id="googleOAuth2Template"
		class="org.springframework.social.google.connect.GoogleOAuth2Template">
		<constructor-arg
			value="878614229019-acd6e5ds8bnsllt2rqm9e0oauaaq0u6e.apps.googleusercontent.com" />
		<constructor-arg value="BLzSf5uagQuetOSz2GIZWvDl" />
	</bean>


	<bean id="googleOAuth2Parameters" class="org.springframework.social.oauth2.OAuth2Parameters">
		<property name="scope" value="email profile"></property>
		<property name="redirectUri"
			value="http://localhost:8090/sms/googleSignInCallback.do" />
	</bean>

	<bean id="authInfo" class="com.mycompany.sms.dto.GoogleAuthInfo">
		<constructor-arg
			value="878614229019-acd6e5ds8bnsllt2rqm9e0oauaaq0u6e.apps.googleusercontent.com" />
		<constructor-arg value="BLzSf5uagQuetOSz2GIZWvDl" />

	</bean>


	<!-- DataSource빈 선언 -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="oracle.jdbc.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin://@127.0.0.1:1521:xe" />
		<property name="username" value="hr" />
		<property name="password" value="a1234" />
	</bean>

	<!--sqlSessionFactoryBean 빈선언 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations">
			<list>
				<value>classpath:com/mycompany/sms/config/userMapper.xml</value>
				<value>classpath:com/mycompany/sms/config/essayMapper.xml</value>
				<value>classpath:com/mycompany/sms/config/wannabeMapper.xml</value>
				<value>classpath:com/mycompany/sms/config/meetingMapper.xml</value>
				<value>classpath:com/mycompany/sms/config/mentorMapper.xml</value>
			</list>
		</property>
	</bean>

	<!-- MemDaoImp빈 선언 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>

	<!-- Spring Jdbc나 Mybatis를 이용해서 DB연동을 처리하는 경우 DataSourceTransactionManager이 
		트랜잭션관리자로 사용된다. -->
	<!-- transactionManager 빈 선언 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 선언적 트랜잭션 : <tx:advice>태그를 이용한 트랜잭션 처리 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*Process" rollback-for="java.lang.Exception" /><!-- 
				process로 끝나는 모든(*)메소드 -->
			<!-- <tx:method name="deleteProcess" rollback-for="java.lang.NullPointerException" 
				/> -->
		</tx:attributes>
	</tx:advice>

	<!-- 트랜잭션 설정 -->
	<aop:config>
		<!-- service패키지에서 board로 시작하는 모든 메소드 -->
		<aop:advisor advice-ref="txAdvice"
			pointcut="execution(* service.Board*.*(..))" /><!-- tx:advice id를 설정 -->
	</aop:config>

	<!-- Dao 빈 선언 -->
	<bean id="userdao" class="com.mycompany.sms.dao.UserDaoImp">
		<property name="sqlSession" ref="sqlSession" />
	</bean>

	<bean id="essaydao" class="com.mycompany.sms.dao.EssayDaoImp">
		<property name="sqlSession" ref="sqlSession" />
	</bean>

	<bean id="wannabedao" class="com.mycompany.sms.dao.WannaDaoImp">
		<property name="sqlSession" ref="sqlSession" />
	</bean>

	<bean id="mentodao" class="com.mycompany.sms.dao.MentorDaoImp">
		<property name="sqlSession" ref="sqlSession" />
	</bean>

	<bean id="meetingdao" class="com.mycompany.sms.dao.MeetingDaoImg">
		<property name="sqlSession" ref="sqlSession" />
	</bean>

	<!-- 파일 업로드 시작 -->
	<!-- 첨부 파일의 임시기억장치 경로 설정 -->
	<bean id="uploadDirResource" class="org.springframework.core.io.FileSystemResource">
		<!-- <constructor-arg value="c:/temp" /> -->
		<constructor-arg value="./src/main/webapp/files/" />
		<!-- 폴더가 있어야 오류가안남, 버전이 높아져서 따로 경로설정안해도 자동으로 됨 -->
	</bean>

	<!-- 파일 업로드 시작 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="1000000000" />
	</bean>

	<!-- 파일 업로드 끝 -->

	<!-- tiles -->
	<bean class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/tiles.xml</value>
			</list>
		</property>
	</bean>

	<bean id="tilesViewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.tiles3.TilesView" />
		<property name="order" value="1" />
	</bean>
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/" />
		<property name="suffix" value=".jsp" />
		<property name="order" value="2"></property>
	</bean>



</beans>
